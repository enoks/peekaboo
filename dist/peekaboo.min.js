/**
 * peekaboo v1.1.4
 * https://github.com/enoks/peekaboo.js
 *
 * Copyright 2018, Stefan KÃ¤sche
 * https://github.com/enoks
 *
 * Licensed under MIT
 * https://github.com/enoks/peekaboo.js/blob/master/LICENSE
 */
!function(e,t){"use strict";"function"==typeof define&&define.amd?define("peekaboo",[],function(){return t}):"object"==typeof module&&"object"==typeof module.exports?module.exports=t:e.peekaboo=t}(this,function(){"use strict";function e(e){if(t.length&&!o){o=!0;var n=window.pageYOffset,i=n+Math.max(document.documentElement.clientHeight,window.innerHeight||0),l=window.pageXOffset,a=l+Math.max(document.documentElement.clientWidth,window.innerWidth||0);t.forEach(function(t,o){"number"==typeof e&&e!==o||(t.$.forEach(function(e,o){if(!e)return t.$[o]=null;var s=e.getBoundingClientRect().top+window.pageYOffset-document.documentElement.clientTop,c=s+e.clientHeight,r=e.getBoundingClientRect().left+window.pageXOffset-document.documentElement.clientLeft,f=r+e.clientWidth;(t.options.loadInvisible===!0||("vertical"==t.options.loadInvisible||c>=n-t.options.threshold&&s<=i+t.options.threshold)&&("horizontal"==t.options.loadInvisible||f>=l-t.options.threshold&&r<=a+t.options.threshold))&&(t.options.class&&e.className.split(/ +/).indexOf(t.options.class.trim())<0&&(e.className=(e.className+=" "+t.options.class.trim()).trim()),t.options.callback.call(e,t.options),t.$[o]=null)}),t.$=t.$.filter(function(e){return e}))}),t=t.filter(function(e){return e.$.length}),setTimeout(function(){o=!1},100)}}var t=[],o=!1;return window.addEventListener("load",e),window.addEventListener("scroll",e),window.addEventListener("resize",e),function(o,n){if(o&&("string"==typeof o?o=document.querySelectorAll(o):o instanceof HTMLElement&&(o=[o]),o.length)){o=Array.prototype.slice.call(o),"function"==typeof n&&(n={callback:n});var i={threshold:0,loadInvisible:!1,class:"peekaboo",callback:function(e){}};if("[object Object]"===Object.prototype.toString.call(n))for(var l in n)if(n.hasOwnProperty(l)){if("loadInvisible"==l)switch((n[l]+"").toLowerCase()){case"true":case"1":n[l]=!0;break;case"horizontal":case"x":n[l]="horizontal";break;case"vertical":case"y":n[l]="vertical";break;default:continue}else switch(typeof i[l]){case"undefined":break;default:if(typeof i[l]!=typeof n[l]){console.debug("Passed value for option '"+l+"' (type of "+typeof n[l]+") doesn't match expected value type ("+typeof i[l]+").");continue}break;case"number":if(n[l]=parseFloat(n[l]),isNaN(n[l])){console.debug("Passed value for option '"+l+"' isn't of type number at all.");continue}}i[l]=n[l]}t.push({$:o,options:i}),e(t.length-1)}}}());