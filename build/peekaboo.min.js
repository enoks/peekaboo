/**
 * peekaboo v1.0.2
 * https://github.com/enoks/peekaboo.js
 *
 * Copyright 2016, Stefan KÃ¤sche
 * https://github.com/enoks
 *
 * Licensed under GNU GENERAL PUBLIC LICENSE Version 3
 * https://github.com/enoks/peekaboo.js/blob/master/LICENSE
 */
!function(e,t){"use strict";"function"==typeof define&&define.amd?define("peekaboo",[],function(){return t}):"object"==typeof module&&"object"==typeof module.exports?module.exports=t:window.peekaboo=t}(this,function(e){"use strict";return function(t,o){function n(){!s&&t.length&&(s=!0,t.forEach(function(o,n){if(!(o==e||o.className.indexOf(c.class)>=0)){var i=window.pageYOffset,a=i+Math.max(document.documentElement.clientHeight,window.innerHeight||0),l=o.getBoundingClientRect().top+window.pageYOffset-document.documentElement.clientTop,s=l+o.clientHeight;s>=i-c.threshold&&l<=a+c.threshold&&(o.className+=" "+c.class,c.callback.call(o,c),delete t[n])}}),s=!1)}if(t&&("string"==typeof t?t=document.querySelectorAll(t):t instanceof HTMLElement&&(t=[t]),t.length)){for(var i=[],a=0;a<t.length;a++)i.push(t[a]);t=i,"function"==typeof o&&(o={callback:o});var c={threshold:0,class:"peekaboo",callback:function(e){}};if("[object Object]"===Object.prototype.toString.call(o))for(var l in o)if(o.hasOwnProperty(l)){switch(typeof c[l]){case"undefined":break;default:if(typeof c[l]!=typeof o[l]){console.debug("Passed value for option '"+l+"' (type of "+typeof o[l]+") doesn't match expected value type ("+typeof c[l]+").");continue}break;case"number":if(o[l]=parseFloat(o[l]),isNaN(o[l])){console.debug("Passed value for option '"+l+"' isn't of type number at all.");continue}}c[l]=o[l]}var s=!1;window.addEventListener("load",n),window.addEventListener("scroll",n),window.addEventListener("resize",n),n()}}}());